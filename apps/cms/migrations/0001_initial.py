# Generated by Django 3.1 on 2020-09-02 06:00

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Balloon',
            fields=[
                ('balloon_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.CharField(max_length=48)),
                ('sid', models.IntegerField()),
                ('cid', models.IntegerField()),
                ('pid', models.IntegerField()),
                ('status', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'balloon',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Custominput',
            fields=[
                ('solution_id', models.IntegerField(primary_key=True, serialize=False)),
                ('input_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'custominput',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mail',
            fields=[
                ('mail_id', models.AutoField(primary_key=True, serialize=False)),
                ('to_user', models.CharField(max_length=48)),
                ('from_user', models.CharField(max_length=48)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField(blank=True, null=True)),
                ('new_mail', models.IntegerField()),
                ('reply', models.IntegerField(blank=True, null=True)),
                ('in_date', models.DateTimeField(blank=True, null=True)),
                ('defunct', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'mail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Online',
            fields=[
                ('hash', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('ip', models.CharField(max_length=46)),
                ('ua', models.CharField(max_length=255)),
                ('refer', models.CharField(blank=True, max_length=255, null=True)),
                ('lastmove', models.IntegerField()),
                ('firsttime', models.IntegerField(blank=True, null=True)),
                ('uri', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'online',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Printer',
            fields=[
                ('printer_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.CharField(max_length=48)),
                ('in_date', models.DateTimeField()),
                ('status', models.SmallIntegerField()),
                ('worktime', models.DateTimeField(blank=True, null=True)),
                ('printer', models.CharField(max_length=16)),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'printer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Privilege',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=48)),
                ('rightstr', models.CharField(max_length=30)),
                ('defunct', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'privilege',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('rid', models.AutoField(primary_key=True, serialize=False)),
                ('author_id', models.CharField(max_length=48)),
                ('time', models.DateTimeField()),
                ('content', models.TextField()),
                ('topic_id', models.IntegerField()),
                ('status', models.IntegerField()),
                ('ip', models.CharField(max_length=46)),
            ],
            options={
                'db_table': 'reply',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShareCode',
            fields=[
                ('share_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.CharField(blank=True, max_length=48, null=True)),
                ('share_code', models.TextField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=32, null=True)),
                ('share_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'share_code',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sim',
            fields=[
                ('s_id', models.IntegerField(primary_key=True, serialize=False)),
                ('sim_s_id', models.IntegerField(blank=True, null=True)),
                ('sim', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sim',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('tid', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=60)),
                ('status', models.IntegerField()),
                ('top_level', models.IntegerField()),
                ('cid', models.IntegerField(blank=True, null=True)),
                ('pid', models.IntegerField()),
                ('author_id', models.CharField(max_length=48)),
            ],
            options={
                'db_table': 'topic',
                'managed': False,
            },
        ),
    ]
